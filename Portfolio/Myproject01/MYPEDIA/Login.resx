<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>